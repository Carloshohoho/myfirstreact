{"version":3,"sources":["logo.svg","components/Greet.js","components/Message.js","components/Button.js","App.js","reportWebVitals.js","index.js"],"names":["Greet","props","name","heroName","children","Message","Button","state","count","this","setState","onClick","addCount","React","Component","App","className","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAAe,G,MAAA,IAA0B,kC,eCS1BA,EATD,SAACC,GACX,OACI,gCACA,yCAAYA,EAAMC,KAAlB,UAA+BD,EAAME,YACpCF,EAAMG,aCDAC,EAHC,WACZ,OAAO,2D,4BC0BIC,E,kDAzBX,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTC,MAAQ,GAHF,E,4CAOd,WACIC,KAAKC,SACG,CACIF,MAAQC,KAAKF,MAAMC,MAAQ,M,oBAK5C,WAAS,IAAD,OACH,OACQ,gCACA,wBAAQG,QAAS,kBAAM,EAAKC,YAA5B,uBACA,yCAAYH,KAAKF,MAAMC,gB,GApBlBK,IAAMC,WC2BZC,MAtBf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,2CACA,wCACA,cAAC,EAAD,CAAOjB,KAAK,QAAQC,SAAS,WAA7B,SACA,cAAC,EAAD,MAEA,cAAC,EAAD,CAAOD,KAAK,OAAOC,SAAS,aAA5B,SACA,cAAC,EAAD,MAEA,cAAC,EAAD,CAAOD,KAAK,OAAOC,SAAS,eCPrBiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1a074471.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const Greet = (props) => {\n    return (\n        <div> \n        <h1> Hello {props.name} a.k.a {props.heroName}</h1>\n        {props.children}\n        </div>\n    )\n}\n\nexport default Greet","const Message = () => {\n    return <p> This is a props children</p>\n}\nexport default Message","import React from \"react\"\nclass Button extends React.Component{\n    constructor (){\n        super()\n        this.state = {\n            count : 0\n        }\n    }\n    \n    addCount(){\n        this.setState(\n                {\n                    count : this.state.count + 1\n                }\n                        )\n    }\n    \n   render(){\n        return( \n                <div>\n                <button onClick={() => this.addCount()}>Click me!</button>\n                <p>count = {this.state.count}</p>\n                </div>\n               \n                )\n    }\n}\nexport default Button","import logo from './logo.svg';\nimport './App.css';\nimport Greet from './components/Greet';\nimport Message from './components/Message';\nimport Button from './components/Button';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>hi friends</p>\n        <p>-Carlos</p>\n        <Greet name=\"Peter\" heroName=\"iron man\">\n        <Message/>\n        </Greet>\n        <Greet name=\"Tony\" heroName=\"Spider man\">\n        <Button/>\n        </Greet>\n        <Greet name=\"Tony\" heroName=\"Hulk\">\n        </Greet>\n        \n       \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}